/* Author       : Thomas Clifford
 * Date Created : 04/15/2018
 * Last Modified: 04/21/2018
 * About        : A simple panel for creating/modifying issues.
 */
package GUI;

import OBJ.Issue;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.*;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/**
 * A panel used to create or modify issues. To use this panel, attach it to a
 * JDialog using "frame.getContentPane().add(new IssuePanel());" where frame is
 * of type JDialog.
 *
 * Example Usage in Detail:
 *
 * final JDialog frame = new JDialog(this, "Create New Issue", true);
 * frame.getContentPane().add(new IssuePanel()); frame.pack();
 * frame.setLocationRelativeTo(this); frame.setVisible(true);
 *
 * @author Thomas Clifford
 */
public class IssuePanel extends javax.swing.JPanel {

    public JDialog dialog;

    private Issue issue;

    private boolean cancelled;

    /**
     * Creates new form IssuePanel. Use this constructor if you want the form to
     * be empty (i.e. a dialog to create a new issue).
     */
    public IssuePanel() {
        initComponents();

        cancelled = false;

        issue = new Issue();
        dialog = new JDialog();
        dialog.setResizable(false);
        dialog.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        dialog.addWindowListener(new WindowListener() {
            @Override
            public void windowOpened(WindowEvent e) {
            }

            @Override
            public void windowClosing(WindowEvent e) {
                cancelled = true;
                dialog.dispose();
            }

            @Override
            public void windowClosed(WindowEvent e) {
            }

            @Override
            public void windowIconified(WindowEvent e) {
            }

            @Override
            public void windowDeiconified(WindowEvent e) {
            }

            @Override
            public void windowActivated(WindowEvent e) {
            }

            @Override
            public void windowDeactivated(WindowEvent e) {
            }
        });
    }

    /**
     * Creates new form IssuePanel. Use this constructor if you want the form to
     * generate with the attributes of the parameterized issue (i.e. a dialog to
     * modify an existing issue).
     *
     * @param issue
     */
    public IssuePanel(Issue issue) {
        this();

        this.issue = issue;

        issueName_jTextField.setText(this.issue.getTitle());
        issueTopic_jTextArea.setText(this.issue.getTopic());

        issueName_jTextField.setBackground((issue.getTitle().isEmpty()) ? MainApplicationFrame.RED : MainApplicationFrame.GREEN);
        issueTopic_jTextArea.setBackground((issue.getTopic().isEmpty()) ? MainApplicationFrame.RED : MainApplicationFrame.GREEN);

        if (this.issue.getVisibilityType() == Issue.VisibilityType.WHITELIST) {
            perm_wholeTeam_jRadioButton.setSelected(false);
            perm_SpecificPeople_jRadioButton.setSelected(true);
            managePersons_jButton.setEnabled(true);
        }

        lowPrior.setSelected(false);
        mediumPrior.setSelected(false);
        highPrior.setSelected(false);

        switch (issue.getPriority()) {
            case LOW:
                lowPrior.setSelected(true);
                break;
            case MEDIUM:
                mediumPrior.setSelected(true);
                break;
            case HIGH:
                highPrior.setSelected(true);
                break;
        }
        
        fileNameLabel.setText(issue.hasCode() ? issue.getCodeFileName() : "No file selected");

        createIssue_jButton.setText("Update Issue");
        
        archiveIssue_jButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        permissions_buttonGroup = new javax.swing.ButtonGroup();
        priorityButtonGroup = new javax.swing.ButtonGroup();
        issueName_jLabel = new javax.swing.JLabel();
        issueName_jTextField = new javax.swing.JTextField();
        issueTopic_jLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        issueTopic_jTextArea = new javax.swing.JTextArea();
        UploadCode_jButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        permissions_jLabel = new javax.swing.JLabel();
        perm_wholeTeam_jRadioButton = new javax.swing.JRadioButton();
        perm_SpecificPeople_jRadioButton = new javax.swing.JRadioButton();
        managePersons_jButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cancel_jButton = new javax.swing.JButton();
        createIssue_jButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        priorityLabel = new javax.swing.JLabel();
        lowPrior = new javax.swing.JRadioButton();
        mediumPrior = new javax.swing.JRadioButton();
        highPrior = new javax.swing.JRadioButton();
        fileNameLabel = new javax.swing.JLabel();
        archiveIssue_jButton = new javax.swing.JButton();

        issueName_jLabel.setText("Issue Name");

        issueName_jTextField.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        issueName_jTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                issueName_jTextFieldKeyTyped(evt);
            }
        });

        issueTopic_jLabel.setText("Issue Topic");

        issueTopic_jTextArea.setColumns(80);
        issueTopic_jTextArea.setFont(new java.awt.Font("Courier", 0, 13)); // NOI18N
        issueTopic_jTextArea.setLineWrap(true);
        issueTopic_jTextArea.setRows(5);
        issueTopic_jTextArea.setTabSize(4);
        issueTopic_jTextArea.setWrapStyleWord(true);
        issueTopic_jTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                issueTopic_jTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(issueTopic_jTextArea);

        UploadCode_jButton.setText("Upload Relevant Code");
        UploadCode_jButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                UploadCode_jButtonrelevantCodeFileChooser(evt);
            }
        });
        UploadCode_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadCode_jButtonActionPerformed(evt);
            }
        });

        permissions_jLabel.setText("Who Can See This Issue?");

        permissions_buttonGroup.add(perm_wholeTeam_jRadioButton);
        perm_wholeTeam_jRadioButton.setSelected(true);
        perm_wholeTeam_jRadioButton.setText("Whole Team");
        perm_wholeTeam_jRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perm_wholeTeam_jRadioButtonActionPerformed(evt);
            }
        });

        permissions_buttonGroup.add(perm_SpecificPeople_jRadioButton);
        perm_SpecificPeople_jRadioButton.setText("Specific People");
        perm_SpecificPeople_jRadioButton.setToolTipText("Coming Soon...");
        perm_SpecificPeople_jRadioButton.setEnabled(false);
        perm_SpecificPeople_jRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perm_SpecificPeople_jRadioButtonActionPerformed(evt);
            }
        });

        managePersons_jButton.setText("Add/View Persons");
        managePersons_jButton.setToolTipText("Coming soon...");
        managePersons_jButton.setEnabled(false);
        managePersons_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managePersons_jButtonActionPerformed(evt);
            }
        });

        cancel_jButton.setText("Cancel");
        cancel_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_jButtonActionPerformed(evt);
            }
        });

        createIssue_jButton.setText("Create Issue");
        createIssue_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createIssue_jButtonActionPerformed(evt);
            }
        });

        priorityLabel.setText("Priority");

        priorityButtonGroup.add(lowPrior);
        lowPrior.setText("Low (Lo)");

        priorityButtonGroup.add(mediumPrior);
        mediumPrior.setSelected(true);
        mediumPrior.setText("Medium (Md)");

        priorityButtonGroup.add(highPrior);
        highPrior.setText("High (Hi)");

        fileNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fileNameLabel.setText("No file selected");

        archiveIssue_jButton.setText("Archive Issue");
        archiveIssue_jButton.setEnabled(false);
        archiveIssue_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archiveIssue_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(issueName_jTextField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(issueName_jLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(issueTopic_jLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(permissions_jLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(perm_wholeTeam_jRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(perm_SpecificPeople_jRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(managePersons_jButton))
                            .addComponent(priorityLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lowPrior)
                                .addGap(18, 18, 18)
                                .addComponent(mediumPrior)
                                .addGap(18, 18, 18)
                                .addComponent(highPrior)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fileNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UploadCode_jButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(archiveIssue_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancel_jButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createIssue_jButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(issueName_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(issueName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(issueTopic_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UploadCode_jButton)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(permissions_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(perm_wholeTeam_jRadioButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(perm_SpecificPeople_jRadioButton)
                        .addComponent(managePersons_jButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(priorityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(highPrior)
                    .addComponent(lowPrior)
                    .addComponent(mediumPrior))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createIssue_jButton)
                    .addComponent(cancel_jButton)
                    .addComponent(archiveIssue_jButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UploadCode_jButtonrelevantCodeFileChooser(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UploadCode_jButtonrelevantCodeFileChooser
        // TODO add your handling code here:
        //Create a file chooser
        final JFileChooser fc = new JFileChooser();
        //In response to a button click:
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File temp = fc.getSelectedFile();
            try {
                issue.setCode(new String(Files.readAllBytes(
                        Paths.get(temp.getAbsolutePath()))));
                issue.setCodeFileName(temp.getName());
                fileNameLabel.setText(temp.getName());
            } catch (IOException e) {
            }
        }

        dialog.pack(); // In case file name is rediculously long.
    }//GEN-LAST:event_UploadCode_jButtonrelevantCodeFileChooser

    private void UploadCode_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadCode_jButtonActionPerformed
        // TODO add your handling code here:
        // Need to send hold onto the sele
    }//GEN-LAST:event_UploadCode_jButtonActionPerformed

    private void perm_wholeTeam_jRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perm_wholeTeam_jRadioButtonActionPerformed
        managePersons_jButton.setEnabled(false);
        // disable whitelist.
    }//GEN-LAST:event_perm_wholeTeam_jRadioButtonActionPerformed

    private void perm_SpecificPeople_jRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perm_SpecificPeople_jRadioButtonActionPerformed
        managePersons_jButton.setEnabled(true);
        // open window to manage whitelist
        // enable whitelist after window closes.
    }//GEN-LAST:event_perm_SpecificPeople_jRadioButtonActionPerformed

    private void managePersons_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managePersons_jButtonActionPerformed
        // TODO
        // 1) open new createWhitelist_jForm
        // 2) hold onto whitelist for later use (form var or something?)
    }//GEN-LAST:event_managePersons_jButtonActionPerformed

    private void cancel_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_jButtonActionPerformed
        cancelled = true;
        dialog.dispose();
    }//GEN-LAST:event_cancel_jButtonActionPerformed

    private void createIssue_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createIssue_jButtonActionPerformed

        boolean isFormValid = (!issueName_jTextField.getText().isEmpty() && !issueTopic_jTextArea.getText().isEmpty());

        if (isFormValid) {
            issue.setTitle(issueName_jTextField.getText());
            issue.setTopic(issueTopic_jTextArea.getText());
            issue.setDateCreated(new Date());

            // Set the priority
            if (lowPrior.isSelected()) {
                issue.setPriority(Issue.Priority.LOW);
            } else if (mediumPrior.isSelected()) {
                issue.setPriority(Issue.Priority.MEDIUM);
            } else {
                issue.setPriority(Issue.Priority.HIGH);
            }

            if (perm_wholeTeam_jRadioButton.isSelected()) {
                issue.setVisibilityType(Issue.VisibilityType.ANYONE);
            } else {
                issue.setVisibilityType(Issue.VisibilityType.WHITELIST);
                // TODO: Once whitelist panel/dialog combo is integrated into the system, get it from this resource.
            }
            dialog.dispose();
        } // 3) FORM IS INVALID
        //    3a) highlight invalid fields and prompt user to correct them.
        else {
            if (issueName_jTextField.getText().isEmpty()) {
                issueName_jTextField.setBackground(MainApplicationFrame.RED);
            }
            if (issueTopic_jTextArea.getText().isEmpty()) {
                issueTopic_jTextArea.setBackground(MainApplicationFrame.RED);
            }
        }
    }//GEN-LAST:event_createIssue_jButtonActionPerformed

    private void issueTopic_jTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_issueTopic_jTextAreaKeyTyped
        if (!evt.isShiftDown()) {
            issueTopic_jTextArea.setBackground((issueTopic_jTextArea.getText().isEmpty()) ? MainApplicationFrame.RED : MainApplicationFrame.GREEN);
            issueTopic_jTextArea.repaint();
        }
    }//GEN-LAST:event_issueTopic_jTextAreaKeyTyped

    private void issueName_jTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_issueName_jTextFieldKeyTyped
        if (!evt.isShiftDown()) {
            issueName_jTextField.setBackground((issueName_jTextField.getText().isEmpty()) ? MainApplicationFrame.RED : MainApplicationFrame.GREEN);
            issueName_jTextField.repaint();
        }
    }//GEN-LAST:event_issueName_jTextFieldKeyTyped

    private void archiveIssue_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archiveIssue_jButtonActionPerformed
                boolean isFormValid = (!issueName_jTextField.getText().isEmpty() && !issueTopic_jTextArea.getText().isEmpty());

        if (isFormValid) {
            issue.setTitle(issueName_jTextField.getText());
            issue.setTopic(issueTopic_jTextArea.getText());
            issue.setDateCreated(new Date());

            // Set the priority
            if (lowPrior.isSelected()) {
                issue.setPriority(Issue.Priority.LOW);
            } else if (mediumPrior.isSelected()) {
                issue.setPriority(Issue.Priority.MEDIUM);
            } else {
                issue.setPriority(Issue.Priority.HIGH);
            }

            if (perm_wholeTeam_jRadioButton.isSelected()) {
                issue.setVisibilityType(Issue.VisibilityType.ANYONE);
            } else {
                issue.setVisibilityType(Issue.VisibilityType.WHITELIST);
                // TODO: Once whitelist panel/dialog combo is integrated into the system, get it from this resource.
            }
            
            issue.setState(Issue.State.ARCHIVED);
            
            dialog.dispose();
        } // 3) FORM IS INVALID
        //    3a) highlight invalid fields and prompt user to correct them.
        else {
            if (issueName_jTextField.getText().isEmpty()) {
                issueName_jTextField.setBackground(MainApplicationFrame.RED);
            }
            if (issueTopic_jTextArea.getText().isEmpty()) {
                issueTopic_jTextArea.setBackground(MainApplicationFrame.RED);
            }
        }
    }//GEN-LAST:event_archiveIssue_jButtonActionPerformed

    public Issue getIssue() {
        return issue;
    }

    public boolean isCancelled;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UploadCode_jButton;
    private javax.swing.JButton archiveIssue_jButton;
    private javax.swing.JButton cancel_jButton;
    private javax.swing.JButton createIssue_jButton;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JRadioButton highPrior;
    private javax.swing.JLabel issueName_jLabel;
    private javax.swing.JTextField issueName_jTextField;
    private javax.swing.JLabel issueTopic_jLabel;
    private javax.swing.JTextArea issueTopic_jTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton lowPrior;
    private javax.swing.JButton managePersons_jButton;
    private javax.swing.JRadioButton mediumPrior;
    private javax.swing.JRadioButton perm_SpecificPeople_jRadioButton;
    private javax.swing.JRadioButton perm_wholeTeam_jRadioButton;
    private javax.swing.ButtonGroup permissions_buttonGroup;
    private javax.swing.JLabel permissions_jLabel;
    private javax.swing.ButtonGroup priorityButtonGroup;
    private javax.swing.JLabel priorityLabel;
    // End of variables declaration//GEN-END:variables
}
